user root;

events {
    worker_connections 1024; # increase if you have lots of clients
    accept_mutex off; # "on" if nginx worker_processes > 1
}

http {
    include mime.types;

    # fallback in case we can't determine a type
    default_type application/octet-stream;
    sendfile on;

    # Update this with the IP to your funkwhale API...
    upstream funkwhale-api {
        server 127.0.0.1:5000;
    }

    # required for websocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80 default_server;
        root /var/www/html;

        location = / {
            return 301 /library;
        }

        location / {

            sub_filter '</head>' '<link href=/custom/custom.css rel=stylesheet></head>';
            sub_filter_once on;

            try_files $uri $uri/ @rewrites;
        }
        location @rewrites {
            rewrite ^(.+)$ /index.html last;
        }
        location /api/ {
            include /etc/nginx/funkwhale_proxy.conf;

            # this is needed if you have file import via upload enabled
            client_max_body_size 30M;
            proxy_pass   http://funkwhale-api/api/;
        }
        location /federation/ {
            include /etc/nginx/funkwhale_proxy.conf;
            proxy_pass   http://funkwhale-api/federation/;
        }
        # You can comment this if you do not plan to use the Subsonic API
        location /rest/ {
            include /etc/nginx/funkwhale_proxy.conf;
            proxy_pass   http://funkwhale-api/api/subsonic/rest/;
        }
        location /.well-known/ {
            include /etc/nginx/funkwhale_proxy.conf;
            proxy_pass   http://funkwhale-api/.well-known/;
        }
        location /media/ {
            alias /srv/funkwhale/data/media/;
        }
        location /_protected/media {
            # this is an internal location that is used to serve
            # audio files once correct permission / authentication
            # has been checked on API side
            internal;
            alias   /srv/funkwhale/data/media;
        }
        location /_protected/music {
            # this is an internal location that is used to serve
            # audio files once correct permission / authentication
            # has been checked on API side
            # Set this to the same value as your MUSIC_DIRECTORY_PATH setting
            internal;
            alias   /srv/funkwhale/data/music;
        }
        location /staticfiles/ {
            # django static files
            alias /srv/funkwhale/data/static/;
        }
        location /settings.json {
            alias /srv/funkwhale/custom/settings.json;
        }
        location /custom {
            alias /srv/funkwhale/custom;
        }
    }

}
